// automatically generated by stateify.

package memmap

import (
	"gvisor.dev/gvisor/pkg/state"
)

func (m *MappingSet) StateTypeName() string {
	return "pkg/sentry/memmap.MappingSet"
}

func (m *MappingSet) StateFields() []string {
	return []string{
		"root",
	}
}

func (m *MappingSet) beforeSave() {}

func (m *MappingSet) StateSave(stateSinkObject state.Sink) {
	m.beforeSave()
	var rootValue *MappingSegmentDataSlices = m.saveRoot()
	stateSinkObject.SaveValue(0, rootValue)
}

func (m *MappingSet) afterLoad() {}

func (m *MappingSet) StateLoad(stateSourceObject state.Source) {
	stateSourceObject.LoadValue(0, new(*MappingSegmentDataSlices), func(y interface{}) { m.loadRoot(y.(*MappingSegmentDataSlices)) })
}

func (m *Mappingnode) StateTypeName() string {
	return "pkg/sentry/memmap.Mappingnode"
}

func (m *Mappingnode) StateFields() []string {
	return []string{
		"nrSegments",
		"parent",
		"parentIndex",
		"hasChildren",
		"maxGap",
		"keys",
		"values",
		"children",
	}
}

func (m *Mappingnode) beforeSave() {}

func (m *Mappingnode) StateSave(stateSinkObject state.Sink) {
	m.beforeSave()
	stateSinkObject.Save(0, &m.nrSegments)
	stateSinkObject.Save(1, &m.parent)
	stateSinkObject.Save(2, &m.parentIndex)
	stateSinkObject.Save(3, &m.hasChildren)
	stateSinkObject.Save(4, &m.maxGap)
	stateSinkObject.Save(5, &m.keys)
	stateSinkObject.Save(6, &m.values)
	stateSinkObject.Save(7, &m.children)
}

func (m *Mappingnode) afterLoad() {}

func (m *Mappingnode) StateLoad(stateSourceObject state.Source) {
	stateSourceObject.Load(0, &m.nrSegments)
	stateSourceObject.Load(1, &m.parent)
	stateSourceObject.Load(2, &m.parentIndex)
	stateSourceObject.Load(3, &m.hasChildren)
	stateSourceObject.Load(4, &m.maxGap)
	stateSourceObject.Load(5, &m.keys)
	stateSourceObject.Load(6, &m.values)
	stateSourceObject.Load(7, &m.children)
}

func (m *MappingSegmentDataSlices) StateTypeName() string {
	return "pkg/sentry/memmap.MappingSegmentDataSlices"
}

func (m *MappingSegmentDataSlices) StateFields() []string {
	return []string{
		"Start",
		"End",
		"Values",
	}
}

func (m *MappingSegmentDataSlices) beforeSave() {}

func (m *MappingSegmentDataSlices) StateSave(stateSinkObject state.Sink) {
	m.beforeSave()
	stateSinkObject.Save(0, &m.Start)
	stateSinkObject.Save(1, &m.End)
	stateSinkObject.Save(2, &m.Values)
}

func (m *MappingSegmentDataSlices) afterLoad() {}

func (m *MappingSegmentDataSlices) StateLoad(stateSourceObject state.Source) {
	stateSourceObject.Load(0, &m.Start)
	stateSourceObject.Load(1, &m.End)
	stateSourceObject.Load(2, &m.Values)
}

func init() {
	state.Register((*MappingSet)(nil))
	state.Register((*Mappingnode)(nil))
	state.Register((*MappingSegmentDataSlices)(nil))
}
