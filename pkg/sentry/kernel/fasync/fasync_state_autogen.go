// automatically generated by stateify.

package fasync

import (
	"gvisor.dev/gvisor/pkg/state"
)

func (f *FileAsync) StateTypeName() string {
	return "pkg/sentry/kernel/fasync.FileAsync"
}

func (f *FileAsync) StateFields() []string {
	return []string{
		"e",
		"requester",
		"registered",
		"recipientPG",
		"recipientTG",
		"recipientT",
	}
}

func (f *FileAsync) beforeSave() {}

func (f *FileAsync) StateSave(stateSinkObject state.Sink) {
	f.beforeSave()
	stateSinkObject.Save(0, &f.e)
	stateSinkObject.Save(1, &f.requester)
	stateSinkObject.Save(2, &f.registered)
	stateSinkObject.Save(3, &f.recipientPG)
	stateSinkObject.Save(4, &f.recipientTG)
	stateSinkObject.Save(5, &f.recipientT)
}

func (f *FileAsync) afterLoad() {}

func (f *FileAsync) StateLoad(stateSourceObject state.Source) {
	stateSourceObject.Load(0, &f.e)
	stateSourceObject.Load(1, &f.requester)
	stateSourceObject.Load(2, &f.registered)
	stateSourceObject.Load(3, &f.recipientPG)
	stateSourceObject.Load(4, &f.recipientTG)
	stateSourceObject.Load(5, &f.recipientT)
}

func init() {
	state.Register((*FileAsync)(nil))
}
