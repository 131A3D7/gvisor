// automatically generated by stateify.

package socket

import (
	"gvisor.dev/gvisor/pkg/state"
)

func (s *SendReceiveTimeout) StateTypeName() string {
	return "pkg/sentry/socket.SendReceiveTimeout"
}

func (s *SendReceiveTimeout) StateFields() []string {
	return []string{
		"send",
		"recv",
	}
}

func (s *SendReceiveTimeout) beforeSave() {}

func (s *SendReceiveTimeout) StateSave(stateSinkObject state.Sink) {
	s.beforeSave()
	stateSinkObject.Save(0, &s.send)
	stateSinkObject.Save(1, &s.recv)
}

func (s *SendReceiveTimeout) afterLoad() {}

func (s *SendReceiveTimeout) StateLoad(stateSourceObject state.Source) {
	stateSourceObject.Load(0, &s.send)
	stateSourceObject.Load(1, &s.recv)
}

func init() {
	state.Register((*SendReceiveTimeout)(nil))
}
